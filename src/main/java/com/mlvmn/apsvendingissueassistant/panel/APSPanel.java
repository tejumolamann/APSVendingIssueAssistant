/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this tem    @Override
    public void insertUpdate(DocumentEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
plate file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mlvmn.apsvendingissueassistant.panel;

import com.mlvmn.apsvendingissueassistant.engine.VendControl;
import com.mlvmn.apsvendingissueassistant.printing.PrintingService;
import com.mlvmn.apsvendingissueassistant.resources.Receipt;
import com.mlvmn.apsvendingissueassistant.resources.Settings;
import com.mlvmn.apsvendingissueassistant.vending.BalanceSummary;
import com.mlvmn.apsvendingissueassistant.vending.Meter;
import com.mlvmn.apsvendingissueassistant.vending.NewTransaction;
import com.mlvmn.apsvendingissueassistant.vending.PaidTransaction;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.Optional;
import java.util.concurrent.CancellationException;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingWorker;
import javax.swing.event.DocumentEvent;
import javax.swing.text.JTextComponent;

/**
 *
 * @author tejum
 */
public class APSPanel extends javax.swing.JFrame {

    /**
     * For controlling the vending operations
     */
    private final VendControl vc;

    /**
     * For saving and retrieving vending settings
     */
    private final Settings vs;

    /**
     * SwingWorker to take care of tasks in the background and allow smooth GUI
     * experience.
     */
    private SwingWorker<Optional, Void> worker;

    //Action commands 
    private static final String WALLET_ACTION_COMMAND = "wallet";
    private static final String VALIDATE_METER_ACTION_COMMAND = "validateMeter";
    private static final String VEND_TRANSACTION_REFERENCE_ACTION_COMMAND = "vendTransactionReference";
    private static final String NEW_TRANSACTION_ACTION_COMMAND = "newTransaction";
    private static final String PAY_TRANSACTION_ACTION_COMMAND = "payTransaction";

    /**
     * An array of the names of the printers installed on the local computer.
     */
    private static String[] printerNames;

    /**
     * Variable to hold the receipt for a vend.
     */
    private static Receipt vendReceipt;

    /**
     * Creates new form APSPanel
     */
    public APSPanel() {

        //Initialize objects for vend control and settings
        vc = VendControl.getInstance();
        vs = Settings.getSettings();

        //Retrieve all the names of the printers installed on the local computer
        printerNames = PrintingService.getAllInstalledPrinterNames();

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogValidateMeterNum = new javax.swing.JDialog();
        jPanelValidateMeterNum = new javax.swing.JPanel();
        jLabelValidateMeterNum = new javax.swing.JLabel();
        jTextFieldValidateMeterNum = new javax.swing.JTextField();
        jButtonClearMeterNum = new javax.swing.JButton();
        jButtonCancelValidateMeterNum = new javax.swing.JButton();
        jButtonValidateMeterNum = new javax.swing.JButton();
        jDialogCredentials = new javax.swing.JDialog();
        jPanelCredentials = new javax.swing.JPanel();
        jLabelUsername = new javax.swing.JLabel();
        jTextFieldUsername = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelPassword = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabelAuthCode = new javax.swing.JLabel();
        jTextFieldAuthCode = new javax.swing.JTextField();
        jPasswordFieldCredentials = new javax.swing.JPasswordField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabelAuthCodeMAchineID = new javax.swing.JLabel();
        jTextFieldMachineID = new javax.swing.JTextField();
        jPanelCredentials2 = new javax.swing.JPanel();
        jButtonClearCredentials = new javax.swing.JButton();
        jButtonCancelSave = new javax.swing.JButton();
        jButtonSaveCredentials = new javax.swing.JButton();
        jDialogDemoLive = new javax.swing.JDialog();
        jPanelDemoLive = new javax.swing.JPanel();
        jRadioButtonLive = new javax.swing.JRadioButton();
        jRadioButtonDemo = new javax.swing.JRadioButton();
        jButtonCancelDemoLive = new javax.swing.JButton();
        jButtonSaveDemoLive1 = new javax.swing.JButton();
        buttonGroupDemoLive = new javax.swing.ButtonGroup();
        jDialogPreviewVend = new javax.swing.JDialog();
        jPanelValidateMeterNum1 = new javax.swing.JPanel();
        jLabelPreviewMeterNum = new javax.swing.JLabel();
        jTextFieldPreviewMeterNum = new javax.swing.JTextField();
        jButtonClearPreview = new javax.swing.JButton();
        jButtonCancelPreview = new javax.swing.JButton();
        jButtonGenerate = new javax.swing.JButton();
        jLabelPreviewAmount = new javax.swing.JLabel();
        jTextFieldPreviewAmount = new javax.swing.JTextField();
        jLabelPreviewPhoneNum = new javax.swing.JLabel();
        jTextFieldPreviewPhoneNum = new javax.swing.JTextField();
        jCheckBoxServiceCharge = new javax.swing.JCheckBox();
        jDialogServiceCharge = new javax.swing.JDialog();
        jPanellServiceCharge = new javax.swing.JPanel();
        jLabelServiceCharge = new javax.swing.JLabel();
        jTextFieldServiceCharge = new javax.swing.JTextField();
        jButtonClearServiceCharge = new javax.swing.JButton();
        jButtonCancelServiceCharge = new javax.swing.JButton();
        jButtonSaveServiceCharge = new javax.swing.JButton();
        jDialogLoading = new javax.swing.JDialog();
        jPanelLoading = new javax.swing.JPanel();
        jProgressBarLoading = new javax.swing.JProgressBar();
        jLabelLoading = new javax.swing.JLabel();
        jButtonLoadingCancelTask = new javax.swing.JButton();
        jDialogPrint = new javax.swing.JDialog();
        jPanelPrint = new javax.swing.JPanel();
        jLabelSelectPrinter = new javax.swing.JLabel();
        jButtonCancelPrint = new javax.swing.JButton();
        jButtonPrint = new javax.swing.JButton();
        jComboBoxPrinterNames = new javax.swing.JComboBox<>();
        jPopupMenuPaste = new javax.swing.JPopupMenu();
        jMenuItemCopy = new javax.swing.JMenuItem();
        jMenuItemCut = new javax.swing.JMenuItem();
        jMenuItemPaste = new javax.swing.JMenuItem();
        jPanelControls = new javax.swing.JPanel();
        jButtonValidate = new javax.swing.JButton();
        jButtonPreviewVend = new javax.swing.JButton();
        jButtonVend = new javax.swing.JButton();
        jButtonGetBalance = new javax.swing.JButton();
        jButtonVendTrasactionRef = new javax.swing.JButton();
        jButtonCopyToken = new javax.swing.JButton();
        jButtonPrintReceipt = new javax.swing.JButton();
        jPanelDisplay = new javax.swing.JPanel();
        jScrollPaneDisplayValues = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        jMenuSettings = new javax.swing.JMenu();
        credentialsMenuItem = new javax.swing.JMenuItem();
        jMenuItemDemoLive = new javax.swing.JMenuItem();
        jMenuItemServiceCharge = new javax.swing.JMenuItem();

        jDialogValidateMeterNum.setTitle("Validate Meter Number");
        jDialogValidateMeterNum.setModal(true);
        jDialogValidateMeterNum.setResizable(false);
        jDialogValidateMeterNum.setSize(new java.awt.Dimension(400, 170));
        jDialogValidateMeterNum.setLocationRelativeTo(null);

        jPanelValidateMeterNum.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelValidateMeterNum.setText("Enter a meter number");

        jTextFieldValidateMeterNum.setActionCommand(VALIDATE_METER_ACTION_COMMAND);
        jTextFieldValidateMeterNum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextFieldValidateMeterNumMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextFieldValidateMeterNumMouseReleased(evt);
            }
        });
        jTextFieldValidateMeterNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldValidateMeterNumActionPerformed(evt);
            }
        });

        jButtonClearMeterNum.setText("Clear");
        jButtonClearMeterNum.setToolTipText("Clear field");
        jButtonClearMeterNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearMeterNumActionPerformed(evt);
            }
        });

        jButtonCancelValidateMeterNum.setText("Cancel");
        jButtonCancelValidateMeterNum.setToolTipText("Cancel");
        jButtonCancelValidateMeterNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelValidateMeterNumActionPerformed(evt);
            }
        });

        jButtonValidateMeterNum.setText("Validate");
        jButtonValidateMeterNum.setToolTipText("Click to validate meter number");
        jButtonValidateMeterNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidateMeterNumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelValidateMeterNumLayout = new javax.swing.GroupLayout(jPanelValidateMeterNum);
        jPanelValidateMeterNum.setLayout(jPanelValidateMeterNumLayout);
        jPanelValidateMeterNumLayout.setHorizontalGroup(
            jPanelValidateMeterNumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelValidateMeterNumLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelValidateMeterNumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldValidateMeterNum)
                    .addGroup(jPanelValidateMeterNumLayout.createSequentialGroup()
                        .addComponent(jLabelValidateMeterNum)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelValidateMeterNumLayout.createSequentialGroup()
                        .addComponent(jButtonClearMeterNum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                        .addComponent(jButtonValidateMeterNum)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelValidateMeterNum)))
                .addContainerGap())
        );
        jPanelValidateMeterNumLayout.setVerticalGroup(
            jPanelValidateMeterNumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelValidateMeterNumLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelValidateMeterNum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldValidateMeterNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelValidateMeterNumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClearMeterNum)
                    .addComponent(jButtonCancelValidateMeterNum)
                    .addComponent(jButtonValidateMeterNum))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogValidateMeterNumLayout = new javax.swing.GroupLayout(jDialogValidateMeterNum.getContentPane());
        jDialogValidateMeterNum.getContentPane().setLayout(jDialogValidateMeterNumLayout);
        jDialogValidateMeterNumLayout.setHorizontalGroup(
            jDialogValidateMeterNumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogValidateMeterNumLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelValidateMeterNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogValidateMeterNumLayout.setVerticalGroup(
            jDialogValidateMeterNumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogValidateMeterNumLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelValidateMeterNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDialogCredentials.setTitle("Credentials");
        jDialogCredentials.setLocation(new java.awt.Point(0, 0));
        jDialogCredentials.setMinimumSize(new java.awt.Dimension(400, 350));
        jDialogCredentials.setModal(true);
        jDialogCredentials.setResizable(false);
        jDialogCredentials.setSize(new java.awt.Dimension(400, 410));
        jDialogCredentials.setLocationRelativeTo(null);

        jPanelCredentials.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelUsername.setText("Username");

        jTextFieldUsername.setToolTipText("Enter username");
        jTextFieldUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsernameActionPerformed(evt);
            }
        });

        jLabelPassword.setText("Password");

        jLabelAuthCode.setText("Authorisation Code");

        jTextFieldAuthCode.setToolTipText("Enter authorisation code");
        jTextFieldAuthCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAuthCodeActionPerformed(evt);
            }
        });

        jPasswordFieldCredentials.setToolTipText("Enter a valid password");
        jPasswordFieldCredentials.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldCredentialsActionPerformed(evt);
            }
        });

        jLabelAuthCodeMAchineID.setText("Machine ID (to be provided by IT Dept.)");

        jTextFieldMachineID.setToolTipText("Enter authorisation code");
        jTextFieldMachineID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMachineIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCredentialsLayout = new javax.swing.GroupLayout(jPanelCredentials);
        jPanelCredentials.setLayout(jPanelCredentialsLayout);
        jPanelCredentialsLayout.setHorizontalGroup(
            jPanelCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCredentialsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldUsername)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addComponent(jTextFieldAuthCode)
                    .addComponent(jPasswordFieldCredentials)
                    .addGroup(jPanelCredentialsLayout.createSequentialGroup()
                        .addGroup(jPanelCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelUsername)
                            .addComponent(jLabelPassword)
                            .addComponent(jLabelAuthCode)
                            .addComponent(jLabelAuthCodeMAchineID))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator4)
                    .addComponent(jTextFieldMachineID))
                .addContainerGap())
        );
        jPanelCredentialsLayout.setVerticalGroup(
            jPanelCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCredentialsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPasswordFieldCredentials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelAuthCode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldAuthCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelAuthCodeMAchineID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldMachineID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelCredentials2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonClearCredentials.setText("Clear form");
        jButtonClearCredentials.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearCredentialsActionPerformed(evt);
            }
        });

        jButtonCancelSave.setText("Cancel");
        jButtonCancelSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelSaveActionPerformed(evt);
            }
        });

        jButtonSaveCredentials.setText("Save");
        jButtonSaveCredentials.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveCredentialsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCredentials2Layout = new javax.swing.GroupLayout(jPanelCredentials2);
        jPanelCredentials2.setLayout(jPanelCredentials2Layout);
        jPanelCredentials2Layout.setHorizontalGroup(
            jPanelCredentials2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCredentials2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonClearCredentials, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(133, 133, 133)
                .addComponent(jButtonCancelSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonSaveCredentials, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelCredentials2Layout.setVerticalGroup(
            jPanelCredentials2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCredentials2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCredentials2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClearCredentials)
                    .addComponent(jButtonCancelSave)
                    .addComponent(jButtonSaveCredentials))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogCredentialsLayout = new javax.swing.GroupLayout(jDialogCredentials.getContentPane());
        jDialogCredentials.getContentPane().setLayout(jDialogCredentialsLayout);
        jDialogCredentialsLayout.setHorizontalGroup(
            jDialogCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogCredentialsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelCredentials, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogCredentialsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanelCredentials2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jDialogCredentialsLayout.setVerticalGroup(
            jDialogCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogCredentialsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCredentials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCredentials2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDialogDemoLive.setTitle("Demo/Live Vending");
        jDialogDemoLive.setModal(true);
        jDialogDemoLive.setResizable(false);
        jDialogDemoLive.setSize(new java.awt.Dimension(400, 175));
        jDialogDemoLive.setLocationRelativeTo(null);

        jPanelDemoLive.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroupDemoLive.add(jRadioButtonLive);
        jRadioButtonLive.setText("Live Vend");
        jRadioButtonLive.setToolTipText("Select for live vending");

        buttonGroupDemoLive.add(jRadioButtonDemo);
        jRadioButtonDemo.setText("Demo Vend");
        jRadioButtonDemo.setToolTipText("Select for demo or none live vending");

        jButtonCancelDemoLive.setText("Cancel");
        jButtonCancelDemoLive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelDemoLiveActionPerformed(evt);
            }
        });

        jButtonSaveDemoLive1.setText("Save");
        jButtonSaveDemoLive1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveDemoLive1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDemoLiveLayout = new javax.swing.GroupLayout(jPanelDemoLive);
        jPanelDemoLive.setLayout(jPanelDemoLiveLayout);
        jPanelDemoLiveLayout.setHorizontalGroup(
            jPanelDemoLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDemoLiveLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDemoLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDemoLiveLayout.createSequentialGroup()
                        .addGroup(jPanelDemoLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonLive)
                            .addComponent(jRadioButtonDemo))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDemoLiveLayout.createSequentialGroup()
                        .addGap(0, 230, Short.MAX_VALUE)
                        .addComponent(jButtonSaveDemoLive1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCancelDemoLive)))
                .addContainerGap())
        );
        jPanelDemoLiveLayout.setVerticalGroup(
            jPanelDemoLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDemoLiveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonLive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonDemo)
                .addGap(18, 18, 18)
                .addGroup(jPanelDemoLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelDemoLive)
                    .addComponent(jButtonSaveDemoLive1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogDemoLiveLayout = new javax.swing.GroupLayout(jDialogDemoLive.getContentPane());
        jDialogDemoLive.getContentPane().setLayout(jDialogDemoLiveLayout);
        jDialogDemoLiveLayout.setHorizontalGroup(
            jDialogDemoLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogDemoLiveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDemoLive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogDemoLiveLayout.setVerticalGroup(
            jDialogDemoLiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogDemoLiveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDemoLive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jDialogPreviewVend.setTitle("Preview Vend/Transaction Reference");
        jDialogPreviewVend.setModal(true);
        jDialogPreviewVend.setResizable(false);
        jDialogPreviewVend.setSize(new java.awt.Dimension(400, 320));
        jDialogPreviewVend.setLocationRelativeTo(null);

        jPanelValidateMeterNum1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelPreviewMeterNum.setText("Enter a meter number");

        jTextFieldPreviewMeterNum.setToolTipText("Type in a meter number");
        jTextFieldPreviewMeterNum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextFieldPreviewMeterNumMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextFieldPreviewMeterNumMouseReleased(evt);
            }
        });

        jButtonClearPreview.setText("Clear");
        jButtonClearPreview.setToolTipText("Clear field");
        jButtonClearPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearPreviewActionPerformed(evt);
            }
        });

        jButtonCancelPreview.setText("Cancel");
        jButtonCancelPreview.setToolTipText("Cancel");
        jButtonCancelPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelPreviewActionPerformed(evt);
            }
        });

        jButtonGenerate.setText("Generate");
        jButtonGenerate.setToolTipText("Click to validate meter number");
        jButtonGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateActionPerformed(evt);
            }
        });

        jLabelPreviewAmount.setText("Enter topup amount");

        jTextFieldPreviewAmount.setToolTipText("Enter an amount");
        jTextFieldPreviewAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextFieldPreviewAmountMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextFieldPreviewAmountMouseReleased(evt);
            }
        });

        jLabelPreviewPhoneNum.setText("Enter phone number");

        jTextFieldPreviewPhoneNum.setToolTipText("Type in a phone number");
        jTextFieldPreviewPhoneNum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextFieldPreviewPhoneNumMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextFieldPreviewPhoneNumMouseReleased(evt);
            }
        });

        jCheckBoxServiceCharge.setSelected(true);
        jCheckBoxServiceCharge.setText("Apply service charge");

        javax.swing.GroupLayout jPanelValidateMeterNum1Layout = new javax.swing.GroupLayout(jPanelValidateMeterNum1);
        jPanelValidateMeterNum1.setLayout(jPanelValidateMeterNum1Layout);
        jPanelValidateMeterNum1Layout.setHorizontalGroup(
            jPanelValidateMeterNum1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelValidateMeterNum1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelValidateMeterNum1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldPreviewMeterNum)
                    .addComponent(jTextFieldPreviewAmount)
                    .addComponent(jTextFieldPreviewPhoneNum)
                    .addGroup(jPanelValidateMeterNum1Layout.createSequentialGroup()
                        .addComponent(jButtonClearPreview)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                        .addComponent(jButtonGenerate)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelPreview))
                    .addGroup(jPanelValidateMeterNum1Layout.createSequentialGroup()
                        .addGroup(jPanelValidateMeterNum1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxServiceCharge)
                            .addComponent(jLabelPreviewMeterNum)
                            .addComponent(jLabelPreviewAmount)
                            .addComponent(jLabelPreviewPhoneNum))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelValidateMeterNum1Layout.setVerticalGroup(
            jPanelValidateMeterNum1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelValidateMeterNum1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelPreviewMeterNum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPreviewMeterNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPreviewAmount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPreviewAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPreviewPhoneNum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPreviewPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jCheckBoxServiceCharge)
                .addGap(18, 18, 18)
                .addGroup(jPanelValidateMeterNum1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClearPreview)
                    .addComponent(jButtonGenerate)
                    .addComponent(jButtonCancelPreview))
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialogPreviewVendLayout = new javax.swing.GroupLayout(jDialogPreviewVend.getContentPane());
        jDialogPreviewVend.getContentPane().setLayout(jDialogPreviewVendLayout);
        jDialogPreviewVendLayout.setHorizontalGroup(
            jDialogPreviewVendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogPreviewVendLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelValidateMeterNum1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogPreviewVendLayout.setVerticalGroup(
            jDialogPreviewVendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogPreviewVendLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelValidateMeterNum1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDialogServiceCharge.setTitle("Service Charge");
        jDialogServiceCharge.setModal(true);
        jDialogServiceCharge.setResizable(false);
        jDialogServiceCharge.setSize(new java.awt.Dimension(400, 170));
        jDialogServiceCharge.setLocationRelativeTo(null);

        jPanellServiceCharge.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelServiceCharge.setText("Enter amount for service charge");

        jTextFieldServiceCharge.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldServiceCharge.setText("0.0");
        jTextFieldServiceCharge.setToolTipText("Type in an amount to charge customers for the service");
        jTextFieldServiceCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldServiceChargeActionPerformed(evt);
            }
        });
        jTextFieldServiceCharge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldServiceChargeKeyTyped(evt);
            }
        });

        jButtonClearServiceCharge.setText("Clear");
        jButtonClearServiceCharge.setToolTipText("Clear field");
        jButtonClearServiceCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearServiceChargeActionPerformed(evt);
            }
        });

        jButtonCancelServiceCharge.setText("Cancel");
        jButtonCancelServiceCharge.setToolTipText("Cancel");
        jButtonCancelServiceCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelServiceChargeActionPerformed(evt);
            }
        });

        jButtonSaveServiceCharge.setText("Save");
        jButtonSaveServiceCharge.setToolTipText("Click to save the amount of service charge");
        jButtonSaveServiceCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveServiceChargeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanellServiceChargeLayout = new javax.swing.GroupLayout(jPanellServiceCharge);
        jPanellServiceCharge.setLayout(jPanellServiceChargeLayout);
        jPanellServiceChargeLayout.setHorizontalGroup(
            jPanellServiceChargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanellServiceChargeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanellServiceChargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldServiceCharge)
                    .addGroup(jPanellServiceChargeLayout.createSequentialGroup()
                        .addComponent(jLabelServiceCharge)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanellServiceChargeLayout.createSequentialGroup()
                        .addComponent(jButtonClearServiceCharge)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                        .addComponent(jButtonSaveServiceCharge)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelServiceCharge)))
                .addContainerGap())
        );
        jPanellServiceChargeLayout.setVerticalGroup(
            jPanellServiceChargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanellServiceChargeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelServiceCharge)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldServiceCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanellServiceChargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClearServiceCharge)
                    .addComponent(jButtonCancelServiceCharge)
                    .addComponent(jButtonSaveServiceCharge))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogServiceChargeLayout = new javax.swing.GroupLayout(jDialogServiceCharge.getContentPane());
        jDialogServiceCharge.getContentPane().setLayout(jDialogServiceChargeLayout);
        jDialogServiceChargeLayout.setHorizontalGroup(
            jDialogServiceChargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogServiceChargeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanellServiceCharge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogServiceChargeLayout.setVerticalGroup(
            jDialogServiceChargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogServiceChargeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanellServiceCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDialogLoading.setTitle("Loading...");
        jDialogLoading.setModal(true);
        jDialogLoading.setResizable(false);
        jDialogLoading.setSize(new java.awt.Dimension(400, 175));
        jDialogLoading.setLocationRelativeTo(null);

        jPanelLoading.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jProgressBarLoading.setIndeterminate(true);

        jLabelLoading.setText("Please wait...");

        jButtonLoadingCancelTask.setText("Cancel");
        jButtonLoadingCancelTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadingCancelTaskActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLoadingLayout = new javax.swing.GroupLayout(jPanelLoading);
        jPanelLoading.setLayout(jPanelLoadingLayout);
        jPanelLoadingLayout.setHorizontalGroup(
            jPanelLoadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLoadingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLoadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBarLoading, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                    .addGroup(jPanelLoadingLayout.createSequentialGroup()
                        .addComponent(jLabelLoading)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLoadingLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonLoadingCancelTask)
                .addGap(154, 154, 154))
        );
        jPanelLoadingLayout.setVerticalGroup(
            jPanelLoadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLoadingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelLoading)
                .addGap(18, 18, 18)
                .addComponent(jProgressBarLoading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonLoadingCancelTask)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogLoadingLayout = new javax.swing.GroupLayout(jDialogLoading.getContentPane());
        jDialogLoading.getContentPane().setLayout(jDialogLoadingLayout);
        jDialogLoadingLayout.setHorizontalGroup(
            jDialogLoadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogLoadingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelLoading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogLoadingLayout.setVerticalGroup(
            jDialogLoadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogLoadingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelLoading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jDialogPrint.setTitle("Print Receipt");
        jDialogPrint.setModal(true);
        jDialogPrint.setResizable(false);
        jDialogPrint.setSize(new java.awt.Dimension(400, 170));
        jDialogPrint.setLocationRelativeTo(null);

        jPanelPrint.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelSelectPrinter.setText("Select the thermal printer");

        jButtonCancelPrint.setText("Cancel");
        jButtonCancelPrint.setToolTipText("Cancel print");
        jButtonCancelPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelPrintActionPerformed(evt);
            }
        });

        jButtonPrint.setText("Print");
        jButtonPrint.setToolTipText("Print using the selected printer");
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });

        jComboBoxPrinterNames.setModel(new DefaultComboBoxModel(printerNames));
        jComboBoxPrinterNames.setToolTipText("List of printer names on this computer");

        javax.swing.GroupLayout jPanelPrintLayout = new javax.swing.GroupLayout(jPanelPrint);
        jPanelPrint.setLayout(jPanelPrintLayout);
        jPanelPrintLayout.setHorizontalGroup(
            jPanelPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrintLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrintLayout.createSequentialGroup()
                        .addGap(0, 134, Short.MAX_VALUE)
                        .addComponent(jButtonPrint)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelPrint))
                    .addGroup(jPanelPrintLayout.createSequentialGroup()
                        .addComponent(jLabelSelectPrinter)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jComboBoxPrinterNames, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelPrintLayout.setVerticalGroup(
            jPanelPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrintLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelSelectPrinter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxPrinterNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelPrint)
                    .addComponent(jButtonPrint))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogPrintLayout = new javax.swing.GroupLayout(jDialogPrint.getContentPane());
        jDialogPrint.getContentPane().setLayout(jDialogPrintLayout);
        jDialogPrintLayout.setHorizontalGroup(
            jDialogPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogPrintLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogPrintLayout.setVerticalGroup(
            jDialogPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogPrintLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenuItemCopy.setText("Copy");
        jMenuItemCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCopyActionPerformed(evt);
            }
        });
        jPopupMenuPaste.add(jMenuItemCopy);

        jMenuItemCut.setText("Cut");
        jMenuItemCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCutActionPerformed(evt);
            }
        });
        jPopupMenuPaste.add(jMenuItemCut);

        jMenuItemPaste.setText("Paste");
        jMenuItemPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPasteActionPerformed(evt);
            }
        });
        jPopupMenuPaste.add(jMenuItemPaste);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Access Power Systems Vending Issue Assistant");

        jPanelControls.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonValidate.setText("Validate");
        jButtonValidate.setToolTipText("Validate Meter Number");
        jButtonValidate.setActionCommand(VALIDATE_METER_ACTION_COMMAND);
        jButtonValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidateActionPerformed(evt);
            }
        });

        jButtonPreviewVend.setText("<html><p align='center'>Preview Vend/</p>Generate Transaction Reference");
        jButtonPreviewVend.setToolTipText("Preview a vend before actual vend");
        jButtonPreviewVend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreviewVendActionPerformed(evt);
            }
        });

        jButtonVend.setText("Vend Meter Number");
        jButtonVend.setToolTipText("Vend for a meter number");
        jButtonVend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVendActionPerformed(evt);
            }
        });

        jButtonGetBalance.setText("Get Balance");
        jButtonGetBalance.setToolTipText("Get balance in wallet");
        jButtonGetBalance.setActionCommand(WALLET_ACTION_COMMAND);
        jButtonGetBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGetBalanceActionPerformed(evt);
            }
        });

        jButtonVendTrasactionRef.setText("Vend Transaction Reference");
        jButtonVendTrasactionRef.setToolTipText("Vend a previously generated transaction reference");
        jButtonVendTrasactionRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVendTrasactionRefActionPerformed(evt);
            }
        });

        jButtonCopyToken.setText("Copy Token");
        jButtonCopyToken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCopyTokenActionPerformed(evt);
            }
        });

        jButtonPrintReceipt.setText("Print Receipt");
        jButtonPrintReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintReceiptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelControlsLayout = new javax.swing.GroupLayout(jPanelControls);
        jPanelControls.setLayout(jPanelControlsLayout);
        jPanelControlsLayout.setHorizontalGroup(
            jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonValidate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonPreviewVend, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonVend, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonVendTrasactionRef, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonGetBalance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCopyToken, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonPrintReceipt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelControlsLayout.setVerticalGroup(
            jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonValidate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonPreviewVend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonVend)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonVendTrasactionRef)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonGetBalance)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCopyToken)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonPrintReceipt)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        jPanelDisplay.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextArea1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextArea1MouseReleased(evt);
            }
        });
        jScrollPaneDisplayValues.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanelDisplayLayout = new javax.swing.GroupLayout(jPanelDisplay);
        jPanelDisplay.setLayout(jPanelDisplayLayout);
        jPanelDisplayLayout.setHorizontalGroup(
            jPanelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneDisplayValues, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDisplayLayout.setVerticalGroup(
            jPanelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneDisplayValues)
                .addContainerGap())
        );

        jMenuFile.setText("File");

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        jMenuFile.add(exitMenuItem);

        jMenuBar1.add(jMenuFile);

        jMenuSettings.setText("Settings");

        credentialsMenuItem.setText("Credentials...");
        credentialsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credentialsMenuItemActionPerformed(evt);
            }
        });
        jMenuSettings.add(credentialsMenuItem);

        jMenuItemDemoLive.setText("Demo or Live...");
        jMenuItemDemoLive.setToolTipText("Click to switch vending between Live and Demo");
        jMenuItemDemoLive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDemoLiveActionPerformed(evt);
            }
        });
        jMenuSettings.add(jMenuItemDemoLive);

        jMenuItemServiceCharge.setText("Service Charge...");
        jMenuItemServiceCharge.setToolTipText("Add or edit amount charged to the customer for using the service");
        jMenuItemServiceCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemServiceChargeActionPerformed(evt);
            }
        });
        jMenuSettings.add(jMenuItemServiceCharge);

        jMenuBar1.add(jMenuSettings);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void credentialsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credentialsMenuItemActionPerformed
        //This displays the dialog window for entering and storing API login 
        //credentions

        //Retrive and set stored credentials except password
        String[] creds = vs.retrieveCredentials();
        jTextFieldUsername.setText(creds[0]);
        jTextFieldAuthCode.setText(creds[2]);
        jPasswordFieldCredentials.setText("");
        jTextFieldMachineID.setText(vs.retrieveMachineID());

        //display dialog window
        jDialogCredentials.setVisible(true);
    }//GEN-LAST:event_credentialsMenuItemActionPerformed

    private void jMenuItemDemoLiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDemoLiveActionPerformed

        //This displays the dialog window that allows a user to switch the program
        //from demo vends to live vends and vice-versa
        //check vending state of the program and set the right radio button to 
        //selected accordingly
        if (vs.retrieveDemoLiveState()) {
            jRadioButtonLive.setSelected(true);
        } else {
            jRadioButtonDemo.setSelected(true);
        }

        //Display the dialog window
        jDialogDemoLive.setVisible(true);
    }//GEN-LAST:event_jMenuItemDemoLiveActionPerformed

    private void jButtonCancelDemoLiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelDemoLiveActionPerformed
        //Action to cancel and close choosing demo or live vends

        jDialogDemoLive.setVisible(false);
    }//GEN-LAST:event_jButtonCancelDemoLiveActionPerformed

    private void jButtonValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidateActionPerformed
        //Action to display valiate meter number dialog window, Components are 
        //shared when vending transaction reference too.

        //Set or change the properties for the validate button and label
        jLabelValidateMeterNum.setText("Enter meter number");
        jButtonValidateMeterNum.setText("Validate");
        jButtonValidateMeterNum.setToolTipText("Click to validate meter number");
        jButtonValidateMeterNum.setActionCommand(VALIDATE_METER_ACTION_COMMAND);

        //Set or change the properties for the text field
        jTextFieldValidateMeterNum.setText("");
        jTextFieldValidateMeterNum.setActionCommand(VALIDATE_METER_ACTION_COMMAND);
        jTextFieldValidateMeterNum.requestFocusInWindow();

        //Set the title of the dialog and disply it
        jDialogValidateMeterNum.setTitle("Validtate Meter Number");
        jDialogValidateMeterNum.setVisible(true);
    }//GEN-LAST:event_jButtonValidateActionPerformed

    private void jButtonClearMeterNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearMeterNumActionPerformed
        //This resets the validate meter number dialog window

        jTextFieldValidateMeterNum.setText("");
        jButtonValidateMeterNum.setEnabled(false);
    }//GEN-LAST:event_jButtonClearMeterNumActionPerformed

    private void jButtonCancelValidateMeterNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelValidateMeterNumActionPerformed
        //This cancels and hides the validate meter number dialog window

        jDialogValidateMeterNum.setVisible(false);
    }//GEN-LAST:event_jButtonCancelValidateMeterNumActionPerformed

    private void jButtonCancelSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelSaveActionPerformed
        //This displays the dialog window for entering and saving API login credentials

        jDialogCredentials.setVisible(false);
    }//GEN-LAST:event_jButtonCancelSaveActionPerformed

    private void jButtonClearCredentialsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearCredentialsActionPerformed
        //This resets the fields of the credential dialog window

        jTextFieldUsername.setText("");
        jPasswordFieldCredentials.setText("");
        jTextFieldAuthCode.setText("");
        jTextFieldMachineID.setText("");
    }//GEN-LAST:event_jButtonClearCredentialsActionPerformed

    private void jButtonClearPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearPreviewActionPerformed
        //This resets the fields for the dialog window preview vend/new transaction dialog window

        jTextFieldPreviewMeterNum.setText("");
        jTextFieldPreviewAmount.setText("");
        jTextFieldPreviewPhoneNum.setText("");

        jButtonGenerate.setEnabled(false);

        jTextFieldPreviewMeterNum.requestFocusInWindow();
    }//GEN-LAST:event_jButtonClearPreviewActionPerformed

    private void jButtonCancelPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelPreviewActionPerformed
        //This action cancels and closes the preview vend dialog window

        jDialogPreviewVend.setVisible(false);
    }//GEN-LAST:event_jButtonCancelPreviewActionPerformed

    private void jButtonPreviewVendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreviewVendActionPerformed
        //This 

        jButtonGenerate.setText("Generate");
        jButtonGenerate.setActionCommand(NEW_TRANSACTION_ACTION_COMMAND);
        jButtonGenerate.setEnabled(false);

        jTextFieldPreviewMeterNum.setText("");
        jTextFieldPreviewAmount.setText("");
        jTextFieldPreviewPhoneNum.setText("");

        jCheckBoxServiceCharge.setSelected(true);

        jTextFieldPreviewMeterNum.requestFocusInWindow();

        jDialogPreviewVend.setTitle("Preview Vend/Transaction Reference");
        jDialogPreviewVend.setVisible(true);
    }//GEN-LAST:event_jButtonPreviewVendActionPerformed

    private void jButtonVendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVendActionPerformed
        jButtonGenerate.setText("Vend");
        jButtonGenerate.setActionCommand(PAY_TRANSACTION_ACTION_COMMAND);
        jButtonGenerate.setEnabled(false);

        jTextFieldPreviewMeterNum.setText("");
        jTextFieldPreviewAmount.setText("");
        jTextFieldPreviewPhoneNum.setText("");

        jCheckBoxServiceCharge.setSelected(true);

        jTextFieldPreviewMeterNum.requestFocusInWindow();

        jDialogPreviewVend.setTitle("Vend Meter");
        jDialogPreviewVend.setVisible(true);
    }//GEN-LAST:event_jButtonVendActionPerformed

    private void jButtonVendTrasactionRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVendTrasactionRefActionPerformed
        //This method reuses Compinents from validating meter numbers, the entire 
        //components in the shown dialog are the same but with different parameters

        jLabelValidateMeterNum.setText("Enter transaction reference");

        jButtonValidateMeterNum.setText("Vend");
        jButtonValidateMeterNum.setActionCommand(VEND_TRANSACTION_REFERENCE_ACTION_COMMAND);
        jButtonValidateMeterNum.setToolTipText("Click to vend transaction reference");

        jTextFieldValidateMeterNum.setText("");
        jTextFieldValidateMeterNum.setActionCommand(VEND_TRANSACTION_REFERENCE_ACTION_COMMAND);

        jDialogValidateMeterNum.setTitle("Vend Transaction Reference");
        jDialogValidateMeterNum.setVisible(true);
    }//GEN-LAST:event_jButtonVendTrasactionRefActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jButtonSaveDemoLive1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveDemoLive1ActionPerformed

        //get the selected button
        ButtonModel buttonModel = buttonGroupDemoLive.getSelection();

        if (buttonModel.equals(jRadioButtonDemo.getModel())) {    //if demo vend is selected
            vs.storeDemoLiveState(false);
            vc.changeVendType(false);
        } else if (buttonModel.equals(jRadioButtonLive.getModel())) { //if live vend is selected
            vs.storeDemoLiveState(true);
            vc.changeVendType(true);
        }

        jDialogDemoLive.setVisible(false);
    }//GEN-LAST:event_jButtonSaveDemoLive1ActionPerformed

    private void jButtonSaveCredentialsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveCredentialsActionPerformed

        //upon clicking save button, if any of the fields are empty then show a 
        //warning message, else go ahead and save
        if (jTextFieldUsername.getText().isEmpty()
                || jPasswordFieldCredentials.getPassword().length == 0
                || jTextFieldAuthCode.getText().isEmpty()
                || jTextFieldMachineID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(jDialogCredentials, "Please fill in all fields!", "Warning: Empty fields", JOptionPane.ERROR_MESSAGE);
        } else {
            vs.storeCredentials(
                    jTextFieldUsername.getText(),
                    jPasswordFieldCredentials.getPassword(),
                    jTextFieldAuthCode.getText(),
                    jTextFieldMachineID.getText()
            );

            jDialogCredentials.setVisible(false);
        }
    }//GEN-LAST:event_jButtonSaveCredentialsActionPerformed

    private void jTextFieldServiceChargeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldServiceChargeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldServiceChargeKeyTyped

    private void jButtonClearServiceChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearServiceChargeActionPerformed
        jTextFieldServiceCharge.setText("0.0");
    }//GEN-LAST:event_jButtonClearServiceChargeActionPerformed

    private void jButtonCancelServiceChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelServiceChargeActionPerformed
        jDialogServiceCharge.setVisible(false);
    }//GEN-LAST:event_jButtonCancelServiceChargeActionPerformed

    private void jMenuItemServiceChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemServiceChargeActionPerformed
        jTextFieldServiceCharge.setText(vs.retrieveServiceCharge());
        jDialogServiceCharge.setVisible(true);
    }//GEN-LAST:event_jMenuItemServiceChargeActionPerformed

    private void jButtonSaveServiceChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveServiceChargeActionPerformed

        //Validate what was typed
        if (jTextFieldServiceCharge.getText().isEmpty()) {    //if the text field is empty
            JOptionPane.showMessageDialog(
                    jDialogServiceCharge,
                    "Service Charge cannot be blank.\nEnter an amount greater than or equal to zero",
                    "Warning: Blank Service Charge",
                    JOptionPane.ERROR_MESSAGE
            );
        } else {     //if not empty
            try {   //let's make sure it was a valid number
                double amount = Double.parseDouble(jTextFieldServiceCharge.getText());
                vs.storeServiceCharge(amount);

                jDialogServiceCharge.setVisible(false);
            } catch (NumberFormatException numberFormatException) {
                JOptionPane.showMessageDialog(
                        jDialogServiceCharge,
                        "Only valid numbers are alowed",
                        "Warning: Invalid Amount",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }//GEN-LAST:event_jButtonSaveServiceChargeActionPerformed

    private void jTextFieldServiceChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldServiceChargeActionPerformed
        jButtonSaveServiceChargeActionPerformed(evt);
    }//GEN-LAST:event_jTextFieldServiceChargeActionPerformed

    private void jButtonGetBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGetBalanceActionPerformed
        Optional result = backgroundWorker(evt.getActionCommand(), null);

        result.ifPresent((t) -> {
            BalanceSummary balance = (BalanceSummary) t;

            Receipt receipt = new Receipt(balance);
            jTextArea1.setText(receipt.sendBalanceSummaryToScreen());
        });
    }//GEN-LAST:event_jButtonGetBalanceActionPerformed

    private Optional backgroundWorker(String action, Object payLoad) throws HeadlessException {
        boolean retry = false;

        do {

            switch (action) {
                case WALLET_ACTION_COMMAND:
                    worker = new SwingWorker() {
                        @Override
                        protected Optional doInBackground() throws Exception {
                            BalanceSummary balance = vc.getBalance();

                            return Optional.of(balance);
                        }

                        @Override
                        protected void done() {
                            jDialogLoading.setVisible(false);

                        }
                    };
                    break;

                case VALIDATE_METER_ACTION_COMMAND:
                    worker = new SwingWorker() {
                        @Override
                        protected Optional doInBackground() throws Exception {
                            Meter meterDetails = vc.validateMeterNumber(payLoad.toString());

                            return Optional.of(meterDetails);
                        }

                        @Override
                        protected void done() {
                            jDialogLoading.setVisible(false);
                        }
                    };
                    break;

                case NEW_TRANSACTION_ACTION_COMMAND:
                    worker = new SwingWorker() {
                        @Override
                        protected Optional doInBackground() throws Exception {
                            String[] data = (String[]) payLoad;

                            NewTransaction transaction = vc.newTransaction(
                                    data[0],
                                    Double.parseDouble(data[1]), data[2],
                                    jCheckBoxServiceCharge.isSelected()
                            );

                            return Optional.of(transaction);
                        }

                        @Override
                        protected void done() {
                            jDialogLoading.setVisible(false);
                        }
                    };
                    break;

                case VEND_TRANSACTION_REFERENCE_ACTION_COMMAND:
                    worker = new SwingWorker() {
                        @Override
                        protected Optional doInBackground() throws Exception {
                            String transRef = payLoad.toString();

                            PaidTransaction paidTrans = vc.vendTransaction(transRef);

                            return Optional.of(paidTrans);
                        }

                        @Override
                        protected void done() {
                            jDialogLoading.setVisible(false);
                        }
                    };
                    break;

                case PAY_TRANSACTION_ACTION_COMMAND:
                    worker = new SwingWorker() {
                        @Override
                        protected Optional doInBackground() throws Exception {
                            NewTransaction transaction = (NewTransaction) payLoad;

                            PaidTransaction paidTrans = vc.vendTransaction(transaction);

                            return Optional.of(paidTrans);
                        }

                        @Override
                        protected void done() {
                            jDialogLoading.setVisible(false);
                        }
                    };
                    break;
            }

            try {
                worker.execute();

                jDialogLoading.setVisible(true);

                if (worker.getState().equals(SwingWorker.StateValue.DONE)) {
                    return worker.get();
                }

            } catch (InterruptedException | ExecutionException | CancellationException ex) {

                if (worker.isCancelled()) {
                    return Optional.empty();
                }

                retry = shouldRetry(ex.getCause().getMessage());

//                if (ex.getCause() instanceof IOException) {
//                    retry = shouldRetry("A Network Error Occurred!");
//                } else if (ex.getCause() instanceof InterruptedException) {
//                    retry = shouldRetry("The current task was interrupted!");
//                } else if (ex.getCause() instanceof CancellationException) {
//                    retry = shouldRetry("The task was cancelled");
//                } else if (ex.getCause() instanceof ExecutionException){
//                    retry = shouldRetry(ex.getLocalizedMessage());
//                }
            }
        } while (retry);

        return Optional.empty();
    }

    /**
     * This method displays an error message for any error that occurs while
     * carrying out a vending action.
     */
    private boolean shouldRetry(String erMessage) throws HeadlessException {

        int option = JOptionPane.showOptionDialog(
                this, erMessage.concat("\nRetry?"), "An Error Occurred!!!",
                JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE,
                null, null, null);

        return option == JOptionPane.YES_OPTION;
    }

    private void jButtonLoadingCancelTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadingCancelTaskActionPerformed
        worker.cancel(true);

        jDialogLoading.setVisible(false);
    }//GEN-LAST:event_jButtonLoadingCancelTaskActionPerformed

    private void jPasswordFieldCredentialsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldCredentialsActionPerformed
        jButtonSaveCredentialsActionPerformed(evt);
    }//GEN-LAST:event_jPasswordFieldCredentialsActionPerformed

    private void jTextFieldAuthCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAuthCodeActionPerformed
        jButtonSaveCredentialsActionPerformed(evt);
    }//GEN-LAST:event_jTextFieldAuthCodeActionPerformed

    private void jTextFieldUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUsernameActionPerformed
        jButtonSaveCredentialsActionPerformed(evt);
    }//GEN-LAST:event_jTextFieldUsernameActionPerformed

    private void jTextFieldMachineIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMachineIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMachineIDActionPerformed

    private void jButtonValidateMeterNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidateMeterNumActionPerformed
        String meterNumOrTransactionReference = jTextFieldValidateMeterNum.getText();

        jDialogValidateMeterNum.setVisible(false);

        if (evt.getActionCommand().equals(VALIDATE_METER_ACTION_COMMAND)) {

            Optional optional = backgroundWorker(VALIDATE_METER_ACTION_COMMAND, meterNumOrTransactionReference);

            optional.ifPresent((t) -> {
                Meter meter = (Meter) t;

                Receipt receipt = new Receipt(meter);
                jTextArea1.setText(receipt.sendMeterDetailsToScreen());
            });

        }

        if (evt.getActionCommand().equals(VEND_TRANSACTION_REFERENCE_ACTION_COMMAND)) {
            Optional vendDetails = backgroundWorker(VEND_TRANSACTION_REFERENCE_ACTION_COMMAND, meterNumOrTransactionReference);

            vendDetails.ifPresent((t) -> {
                PaidTransaction paidTransaction = (PaidTransaction) t;

                Receipt receipt = new Receipt(paidTransaction);
                jTextArea1.setText(receipt.sendPaidTransactionToScreen());
            });
        }
    }//GEN-LAST:event_jButtonValidateMeterNumActionPerformed

    private void jButtonGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateActionPerformed
        String amount, meterNo, phoneNo;

        amount = jTextFieldPreviewAmount.getText();

        meterNo = jTextFieldPreviewMeterNum.getText();
        phoneNo = jTextFieldPreviewPhoneNum.getText();

        String[] data = {
            meterNo,
            amount,
            phoneNo
        };

        jDialogPreviewVend.setVisible(false);

        //Create a new transaction, either a preview or vend command a new transaction 
        //must be created.
        Optional newTransactionOpt = backgroundWorker(NEW_TRANSACTION_ACTION_COMMAND, data);

        newTransactionOpt.ifPresent((t) -> {

            NewTransaction newTransaction = (NewTransaction) t;

            if (evt.getActionCommand().equals(PAY_TRANSACTION_ACTION_COMMAND)) {

                //Do the vend
                Optional paidTransactionOpt = backgroundWorker(PAY_TRANSACTION_ACTION_COMMAND, newTransaction);

                paidTransactionOpt.ifPresent((v) -> {
                    PaidTransaction paidTransaction = (PaidTransaction) v;

                    Receipt receipt = new Receipt(paidTransaction);
                    jTextArea1.setText(receipt.sendPaidTransactionToScreen());
                });

            } else {
                Receipt receipt = new Receipt(newTransaction);
                jTextArea1.setText(receipt.sendNewTransactionToScreen());
            }

        });
    }//GEN-LAST:event_jButtonGenerateActionPerformed

    private void enableGenerateButton() {
        String meterNumber = jTextFieldPreviewMeterNum.getText();
        String amount = jTextFieldPreviewAmount.getText();
        String phoneNumber = jTextFieldPreviewPhoneNum.getText();

        if (!meterNumber.isBlank() && !meterNumber.isEmpty()
                && !amount.isBlank() && !amount.isEmpty()
                && !phoneNumber.isBlank() && !phoneNumber.isEmpty()) {
            jButtonGenerate.setEnabled(true);
        }
    }

    private void jButtonCopyTokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCopyTokenActionPerformed
        String receiptText = jTextArea1.getText();

        int marker = receiptText.lastIndexOf("TOKEN: ");

        if (marker != -1) {
            int tokenLocation = marker + "TOKEN: ".length();
            String token = receiptText.substring(tokenLocation);

            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            StringSelection selected = new StringSelection(token);
            clipboard.setContents(selected, null);

            JOptionPane.showMessageDialog(this, "Token copied successfully!", "Copy Token", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No token was generated!", "Copy Token", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_jButtonCopyTokenActionPerformed

    private void jTextFieldValidateMeterNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldValidateMeterNumActionPerformed
        if (!jTextFieldValidateMeterNum.getText().isEmpty() && !jTextFieldValidateMeterNum.getText().isBlank()) {
            jButtonValidateMeterNumActionPerformed(evt);
        }
    }//GEN-LAST:event_jTextFieldValidateMeterNumActionPerformed

    private void jButtonPrintReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintReceiptActionPerformed
        jDialogPrint.setVisible(true);
    }//GEN-LAST:event_jButtonPrintReceiptActionPerformed

    private void jButtonCancelPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelPrintActionPerformed
        jDialogPrint.setVisible(false);
    }//GEN-LAST:event_jButtonCancelPrintActionPerformed

    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
        if (vendReceipt == null) {
            JOptionPane.showMessageDialog(
                    this,
                    "There was no vend performed.\n\nDo a vend and try again.",
                    "No Vend",
                    JOptionPane.WARNING_MESSAGE
            );
        } else {
            String printerName = (String) jComboBoxPrinterNames.getSelectedItem();

            try {
                vendReceipt.sendToPrinter(printerName);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(), "Printer Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonPrintActionPerformed

    private void jTextFieldValidateMeterNumMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldValidateMeterNumMousePressed
        if (evt.isPopupTrigger()) {
            jPopupMenuPaste.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTextFieldValidateMeterNumMousePressed

    private void jTextFieldValidateMeterNumMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldValidateMeterNumMouseReleased
        if (evt.isPopupTrigger()) {
            jPopupMenuPaste.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTextFieldValidateMeterNumMouseReleased

    private void jMenuItemPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPasteActionPerformed
        javax.swing.text.JTextComponent jTextComponent = getInvokedTextComponent();
        
        jTextComponent.paste();
    }//GEN-LAST:event_jMenuItemPasteActionPerformed

    private void jTextFieldPreviewMeterNumMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPreviewMeterNumMousePressed
        jTextFieldValidateMeterNumMousePressed(evt);
    }//GEN-LAST:event_jTextFieldPreviewMeterNumMousePressed

    private void jTextFieldPreviewMeterNumMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPreviewMeterNumMouseReleased
        jTextFieldValidateMeterNumMouseReleased(evt);
    }//GEN-LAST:event_jTextFieldPreviewMeterNumMouseReleased

    private void jTextFieldPreviewAmountMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPreviewAmountMousePressed
        jTextFieldValidateMeterNumMousePressed(evt);
    }//GEN-LAST:event_jTextFieldPreviewAmountMousePressed

    private void jTextFieldPreviewAmountMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPreviewAmountMouseReleased
        jTextFieldValidateMeterNumMouseReleased(evt);
    }//GEN-LAST:event_jTextFieldPreviewAmountMouseReleased

    private void jTextFieldPreviewPhoneNumMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPreviewPhoneNumMousePressed
        jTextFieldValidateMeterNumMousePressed(evt);
    }//GEN-LAST:event_jTextFieldPreviewPhoneNumMousePressed

    private void jTextFieldPreviewPhoneNumMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPreviewPhoneNumMouseReleased
        jTextFieldValidateMeterNumMouseReleased(evt);
    }//GEN-LAST:event_jTextFieldPreviewPhoneNumMouseReleased

    private void jMenuItemCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCopyActionPerformed
        Object sourceComponent = evt.getSource();

        javax.swing.text.JTextComponent jTextComponent = getInvokedTextComponent();

        jTextComponent.copy();
    }//GEN-LAST:event_jMenuItemCopyActionPerformed

    private void jMenuItemCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCutActionPerformed
        javax.swing.text.JTextComponent jTextComponent = getInvokedTextComponent();
        
        jTextComponent.cut();
    }//GEN-LAST:event_jMenuItemCutActionPerformed

    private void jTextArea1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MousePressed
        jTextFieldValidateMeterNumMousePressed(evt);
    }//GEN-LAST:event_jTextArea1MousePressed

    private void jTextArea1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseReleased
        jTextFieldValidateMeterNumMouseReleased(evt);
    }//GEN-LAST:event_jTextArea1MouseReleased

    private JTextComponent getInvokedTextComponent() {
        Component component = jPopupMenuPaste.getInvoker();
        java.awt.Container container = (java.awt.Container) component;
        javax.swing.JComponent jComponent = (javax.swing.JComponent) container;
        javax.swing.text.JTextComponent jTextComponent = (javax.swing.text.JTextComponent) jComponent;
        
        return jTextComponent;
    }

    /**
     * This method ensures only numbers are typed into a text field. It takes a
     * KeyEvent listener as an argument and the event's text field will accept
     * numbers only.
     */
    private void numbersOnlyTextField(KeyEvent evt) {
        javax.swing.JTextField jtf = (javax.swing.JTextField) evt.getComponent();
        char keyChar = evt.getKeyChar();
        if (keyChar >= '0' && keyChar <= '9'
                || keyChar == KeyEvent.VK_BACK_SPACE || keyChar == KeyEvent.VK_DELETE) {
            jtf.setEditable(true);
        } else {
            jtf.setEditable(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (newTransactionOpt) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(APSPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(APSPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(APSPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(APSPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new APSPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupDemoLive;
    private javax.swing.JMenuItem credentialsMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JButton jButtonCancelDemoLive;
    private javax.swing.JButton jButtonCancelPreview;
    private javax.swing.JButton jButtonCancelPrint;
    private javax.swing.JButton jButtonCancelSave;
    private javax.swing.JButton jButtonCancelServiceCharge;
    private javax.swing.JButton jButtonCancelValidateMeterNum;
    private javax.swing.JButton jButtonClearCredentials;
    private javax.swing.JButton jButtonClearMeterNum;
    private javax.swing.JButton jButtonClearPreview;
    private javax.swing.JButton jButtonClearServiceCharge;
    private javax.swing.JButton jButtonCopyToken;
    private javax.swing.JButton jButtonGenerate;
    private javax.swing.JButton jButtonGetBalance;
    private javax.swing.JButton jButtonLoadingCancelTask;
    private javax.swing.JButton jButtonPreviewVend;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JButton jButtonPrintReceipt;
    private javax.swing.JButton jButtonSaveCredentials;
    private javax.swing.JButton jButtonSaveDemoLive1;
    private javax.swing.JButton jButtonSaveServiceCharge;
    private javax.swing.JButton jButtonValidate;
    private javax.swing.JButton jButtonValidateMeterNum;
    private javax.swing.JButton jButtonVend;
    private javax.swing.JButton jButtonVendTrasactionRef;
    private javax.swing.JCheckBox jCheckBoxServiceCharge;
    private javax.swing.JComboBox<String> jComboBoxPrinterNames;
    private javax.swing.JDialog jDialogCredentials;
    private javax.swing.JDialog jDialogDemoLive;
    private javax.swing.JDialog jDialogLoading;
    private javax.swing.JDialog jDialogPreviewVend;
    private javax.swing.JDialog jDialogPrint;
    private javax.swing.JDialog jDialogServiceCharge;
    private javax.swing.JDialog jDialogValidateMeterNum;
    private javax.swing.JLabel jLabelAuthCode;
    private javax.swing.JLabel jLabelAuthCodeMAchineID;
    private javax.swing.JLabel jLabelLoading;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelPreviewAmount;
    private javax.swing.JLabel jLabelPreviewMeterNum;
    private javax.swing.JLabel jLabelPreviewPhoneNum;
    private javax.swing.JLabel jLabelSelectPrinter;
    private javax.swing.JLabel jLabelServiceCharge;
    private javax.swing.JLabel jLabelUsername;
    private javax.swing.JLabel jLabelValidateMeterNum;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemCopy;
    private javax.swing.JMenuItem jMenuItemCut;
    private javax.swing.JMenuItem jMenuItemDemoLive;
    private javax.swing.JMenuItem jMenuItemPaste;
    private javax.swing.JMenuItem jMenuItemServiceCharge;
    private javax.swing.JMenu jMenuSettings;
    private javax.swing.JPanel jPanelControls;
    private javax.swing.JPanel jPanelCredentials;
    private javax.swing.JPanel jPanelCredentials2;
    private javax.swing.JPanel jPanelDemoLive;
    private javax.swing.JPanel jPanelDisplay;
    private javax.swing.JPanel jPanelLoading;
    private javax.swing.JPanel jPanelPrint;
    private javax.swing.JPanel jPanelValidateMeterNum;
    private javax.swing.JPanel jPanelValidateMeterNum1;
    private javax.swing.JPanel jPanellServiceCharge;
    private javax.swing.JPasswordField jPasswordFieldCredentials;
    private javax.swing.JPopupMenu jPopupMenuPaste;
    private javax.swing.JProgressBar jProgressBarLoading;
    private javax.swing.JRadioButton jRadioButtonDemo;
    private javax.swing.JRadioButton jRadioButtonLive;
    private javax.swing.JScrollPane jScrollPaneDisplayValues;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldAuthCode;
    private javax.swing.JTextField jTextFieldMachineID;
    private javax.swing.JTextField jTextFieldPreviewAmount;
    private javax.swing.JTextField jTextFieldPreviewMeterNum;
    private javax.swing.JTextField jTextFieldPreviewPhoneNum;
    private javax.swing.JTextField jTextFieldServiceCharge;
    private javax.swing.JTextField jTextFieldUsername;
    private javax.swing.JTextField jTextFieldValidateMeterNum;
    // End of variables declaration//GEN-END:variables
}
